// Code generated by protoc-gen-go. DO NOT EDIT.
// versions:
// 	protoc-gen-go v1.28.1
// 	protoc        v3.21.9
// source: answer_sheet.proto

package answersheetpb

import (
	_ "google.golang.org/genproto/googleapis/api/annotations"
	protoreflect "google.golang.org/protobuf/reflect/protoreflect"
	protoimpl "google.golang.org/protobuf/runtime/protoimpl"
	timestamppb "google.golang.org/protobuf/types/known/timestamppb"
	reflect "reflect"
	sync "sync"
)

const (
	// Verify that this generated code is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(20 - protoimpl.MinVersion)
	// Verify that runtime/protoimpl is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(protoimpl.MaxVersion - 20)
)

type Test struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Id                 int64                  `protobuf:"varint,11,opt,name=id,proto3" json:"id,omitempty"`
	Name               string                 `protobuf:"bytes,1,opt,name=name,proto3" json:"name,omitempty"`
	TimeToDo           int32                  `protobuf:"varint,2,opt,name=time_to_do,json=timeToDo,proto3" json:"time_to_do,omitempty"`
	TimeStart          *timestamppb.Timestamp `protobuf:"bytes,3,opt,name=time_start,json=timeStart,proto3" json:"time_start,omitempty"`
	TimeEnd            *timestamppb.Timestamp `protobuf:"bytes,4,opt,name=time_end,json=timeEnd,proto3" json:"time_end,omitempty"`
	DoOnce             bool                   `protobuf:"varint,5,opt,name=do_once,json=doOnce,proto3" json:"do_once,omitempty"`
	Password           string                 `protobuf:"bytes,6,opt,name=password,proto3" json:"password,omitempty"`
	PreventCheat       uint32                 `protobuf:"varint,7,opt,name=prevent_cheat,json=preventCheat,proto3" json:"prevent_cheat,omitempty"`
	IsAuthenticateUser bool                   `protobuf:"varint,8,opt,name=is_authenticate_user,json=isAuthenticateUser,proto3" json:"is_authenticate_user,omitempty"`
	ShowMark           uint32                 `protobuf:"varint,9,opt,name=show_mark,json=showMark,proto3" json:"show_mark,omitempty"`
	ShowAnswer         uint32                 `protobuf:"varint,10,opt,name=show_answer,json=showAnswer,proto3" json:"show_answer,omitempty"`
	CreatedBy          int64                  `protobuf:"varint,12,opt,name=created_by,json=createdBy,proto3" json:"created_by,omitempty"`
	CreatedAt          *timestamppb.Timestamp `protobuf:"bytes,13,opt,name=created_at,json=createdAt,proto3" json:"created_at,omitempty"`
	UpdatedAt          *timestamppb.Timestamp `protobuf:"bytes,14,opt,name=updated_at,json=updatedAt,proto3" json:"updated_at,omitempty"`
}

func (x *Test) Reset() {
	*x = Test{}
	if protoimpl.UnsafeEnabled {
		mi := &file_answer_sheet_proto_msgTypes[0]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *Test) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Test) ProtoMessage() {}

func (x *Test) ProtoReflect() protoreflect.Message {
	mi := &file_answer_sheet_proto_msgTypes[0]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Test.ProtoReflect.Descriptor instead.
func (*Test) Descriptor() ([]byte, []int) {
	return file_answer_sheet_proto_rawDescGZIP(), []int{0}
}

func (x *Test) GetId() int64 {
	if x != nil {
		return x.Id
	}
	return 0
}

func (x *Test) GetName() string {
	if x != nil {
		return x.Name
	}
	return ""
}

func (x *Test) GetTimeToDo() int32 {
	if x != nil {
		return x.TimeToDo
	}
	return 0
}

func (x *Test) GetTimeStart() *timestamppb.Timestamp {
	if x != nil {
		return x.TimeStart
	}
	return nil
}

func (x *Test) GetTimeEnd() *timestamppb.Timestamp {
	if x != nil {
		return x.TimeEnd
	}
	return nil
}

func (x *Test) GetDoOnce() bool {
	if x != nil {
		return x.DoOnce
	}
	return false
}

func (x *Test) GetPassword() string {
	if x != nil {
		return x.Password
	}
	return ""
}

func (x *Test) GetPreventCheat() uint32 {
	if x != nil {
		return x.PreventCheat
	}
	return 0
}

func (x *Test) GetIsAuthenticateUser() bool {
	if x != nil {
		return x.IsAuthenticateUser
	}
	return false
}

func (x *Test) GetShowMark() uint32 {
	if x != nil {
		return x.ShowMark
	}
	return 0
}

func (x *Test) GetShowAnswer() uint32 {
	if x != nil {
		return x.ShowAnswer
	}
	return 0
}

func (x *Test) GetCreatedBy() int64 {
	if x != nil {
		return x.CreatedBy
	}
	return 0
}

func (x *Test) GetCreatedAt() *timestamppb.Timestamp {
	if x != nil {
		return x.CreatedAt
	}
	return nil
}

func (x *Test) GetUpdatedAt() *timestamppb.Timestamp {
	if x != nil {
		return x.UpdatedAt
	}
	return nil
}

type StartDoTestRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	TestId  int64  `protobuf:"varint,1,opt,name=test_id,json=testId,proto3" json:"test_id,omitempty"`
	Version string `protobuf:"bytes,2,opt,name=version,proto3" json:"version,omitempty"`
}

func (x *StartDoTestRequest) Reset() {
	*x = StartDoTestRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_answer_sheet_proto_msgTypes[1]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *StartDoTestRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*StartDoTestRequest) ProtoMessage() {}

func (x *StartDoTestRequest) ProtoReflect() protoreflect.Message {
	mi := &file_answer_sheet_proto_msgTypes[1]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use StartDoTestRequest.ProtoReflect.Descriptor instead.
func (*StartDoTestRequest) Descriptor() ([]byte, []int) {
	return file_answer_sheet_proto_rawDescGZIP(), []int{1}
}

func (x *StartDoTestRequest) GetTestId() int64 {
	if x != nil {
		return x.TestId
	}
	return 0
}

func (x *StartDoTestRequest) GetVersion() string {
	if x != nil {
		return x.Version
	}
	return ""
}

type StartDoTestResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Message string `protobuf:"bytes,1,opt,name=message,proto3" json:"message,omitempty"`
}

func (x *StartDoTestResponse) Reset() {
	*x = StartDoTestResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_answer_sheet_proto_msgTypes[2]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *StartDoTestResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*StartDoTestResponse) ProtoMessage() {}

func (x *StartDoTestResponse) ProtoReflect() protoreflect.Message {
	mi := &file_answer_sheet_proto_msgTypes[2]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use StartDoTestResponse.ProtoReflect.Descriptor instead.
func (*StartDoTestResponse) Descriptor() ([]byte, []int) {
	return file_answer_sheet_proto_rawDescGZIP(), []int{2}
}

func (x *StartDoTestResponse) GetMessage() string {
	if x != nil {
		return x.Message
	}
	return ""
}

type CheckUserDoingTestRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	UserId int64 `protobuf:"varint,1,opt,name=user_id,json=userId,proto3" json:"user_id,omitempty"`
	TestId int64 `protobuf:"varint,2,opt,name=test_id,json=testId,proto3" json:"test_id,omitempty"`
}

func (x *CheckUserDoingTestRequest) Reset() {
	*x = CheckUserDoingTestRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_answer_sheet_proto_msgTypes[3]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *CheckUserDoingTestRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CheckUserDoingTestRequest) ProtoMessage() {}

func (x *CheckUserDoingTestRequest) ProtoReflect() protoreflect.Message {
	mi := &file_answer_sheet_proto_msgTypes[3]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CheckUserDoingTestRequest.ProtoReflect.Descriptor instead.
func (*CheckUserDoingTestRequest) Descriptor() ([]byte, []int) {
	return file_answer_sheet_proto_rawDescGZIP(), []int{3}
}

func (x *CheckUserDoingTestRequest) GetUserId() int64 {
	if x != nil {
		return x.UserId
	}
	return 0
}

func (x *CheckUserDoingTestRequest) GetTestId() int64 {
	if x != nil {
		return x.TestId
	}
	return 0
}

type CheckUserDoingTestResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Check   bool   `protobuf:"varint,1,opt,name=check,proto3" json:"check,omitempty"`
	Message string `protobuf:"bytes,2,opt,name=message,proto3" json:"message,omitempty"`
}

func (x *CheckUserDoingTestResponse) Reset() {
	*x = CheckUserDoingTestResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_answer_sheet_proto_msgTypes[4]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *CheckUserDoingTestResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CheckUserDoingTestResponse) ProtoMessage() {}

func (x *CheckUserDoingTestResponse) ProtoReflect() protoreflect.Message {
	mi := &file_answer_sheet_proto_msgTypes[4]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CheckUserDoingTestResponse.ProtoReflect.Descriptor instead.
func (*CheckUserDoingTestResponse) Descriptor() ([]byte, []int) {
	return file_answer_sheet_proto_rawDescGZIP(), []int{4}
}

func (x *CheckUserDoingTestResponse) GetCheck() bool {
	if x != nil {
		return x.Check
	}
	return false
}

func (x *CheckUserDoingTestResponse) GetMessage() string {
	if x != nil {
		return x.Message
	}
	return ""
}

var File_answer_sheet_proto protoreflect.FileDescriptor

var file_answer_sheet_proto_rawDesc = []byte{
	0x0a, 0x12, 0x61, 0x6e, 0x73, 0x77, 0x65, 0x72, 0x5f, 0x73, 0x68, 0x65, 0x65, 0x74, 0x2e, 0x70,
	0x72, 0x6f, 0x74, 0x6f, 0x12, 0x0c, 0x61, 0x6e, 0x73, 0x77, 0x65, 0x72, 0x5f, 0x73, 0x68, 0x65,
	0x65, 0x74, 0x1a, 0x1c, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2f, 0x61, 0x70, 0x69, 0x2f, 0x61,
	0x6e, 0x6e, 0x6f, 0x74, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x73, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f,
	0x1a, 0x1f, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2f, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75,
	0x66, 0x2f, 0x74, 0x69, 0x6d, 0x65, 0x73, 0x74, 0x61, 0x6d, 0x70, 0x2e, 0x70, 0x72, 0x6f, 0x74,
	0x6f, 0x22, 0x99, 0x04, 0x0a, 0x04, 0x54, 0x65, 0x73, 0x74, 0x12, 0x0e, 0x0a, 0x02, 0x69, 0x64,
	0x18, 0x0b, 0x20, 0x01, 0x28, 0x03, 0x52, 0x02, 0x69, 0x64, 0x12, 0x12, 0x0a, 0x04, 0x6e, 0x61,
	0x6d, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x6e, 0x61, 0x6d, 0x65, 0x12, 0x1c,
	0x0a, 0x0a, 0x74, 0x69, 0x6d, 0x65, 0x5f, 0x74, 0x6f, 0x5f, 0x64, 0x6f, 0x18, 0x02, 0x20, 0x01,
	0x28, 0x05, 0x52, 0x08, 0x74, 0x69, 0x6d, 0x65, 0x54, 0x6f, 0x44, 0x6f, 0x12, 0x39, 0x0a, 0x0a,
	0x74, 0x69, 0x6d, 0x65, 0x5f, 0x73, 0x74, 0x61, 0x72, 0x74, 0x18, 0x03, 0x20, 0x01, 0x28, 0x0b,
	0x32, 0x1a, 0x2e, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62,
	0x75, 0x66, 0x2e, 0x54, 0x69, 0x6d, 0x65, 0x73, 0x74, 0x61, 0x6d, 0x70, 0x52, 0x09, 0x74, 0x69,
	0x6d, 0x65, 0x53, 0x74, 0x61, 0x72, 0x74, 0x12, 0x35, 0x0a, 0x08, 0x74, 0x69, 0x6d, 0x65, 0x5f,
	0x65, 0x6e, 0x64, 0x18, 0x04, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x1a, 0x2e, 0x67, 0x6f, 0x6f, 0x67,
	0x6c, 0x65, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66, 0x2e, 0x54, 0x69, 0x6d, 0x65,
	0x73, 0x74, 0x61, 0x6d, 0x70, 0x52, 0x07, 0x74, 0x69, 0x6d, 0x65, 0x45, 0x6e, 0x64, 0x12, 0x17,
	0x0a, 0x07, 0x64, 0x6f, 0x5f, 0x6f, 0x6e, 0x63, 0x65, 0x18, 0x05, 0x20, 0x01, 0x28, 0x08, 0x52,
	0x06, 0x64, 0x6f, 0x4f, 0x6e, 0x63, 0x65, 0x12, 0x1a, 0x0a, 0x08, 0x70, 0x61, 0x73, 0x73, 0x77,
	0x6f, 0x72, 0x64, 0x18, 0x06, 0x20, 0x01, 0x28, 0x09, 0x52, 0x08, 0x70, 0x61, 0x73, 0x73, 0x77,
	0x6f, 0x72, 0x64, 0x12, 0x23, 0x0a, 0x0d, 0x70, 0x72, 0x65, 0x76, 0x65, 0x6e, 0x74, 0x5f, 0x63,
	0x68, 0x65, 0x61, 0x74, 0x18, 0x07, 0x20, 0x01, 0x28, 0x0d, 0x52, 0x0c, 0x70, 0x72, 0x65, 0x76,
	0x65, 0x6e, 0x74, 0x43, 0x68, 0x65, 0x61, 0x74, 0x12, 0x30, 0x0a, 0x14, 0x69, 0x73, 0x5f, 0x61,
	0x75, 0x74, 0x68, 0x65, 0x6e, 0x74, 0x69, 0x63, 0x61, 0x74, 0x65, 0x5f, 0x75, 0x73, 0x65, 0x72,
	0x18, 0x08, 0x20, 0x01, 0x28, 0x08, 0x52, 0x12, 0x69, 0x73, 0x41, 0x75, 0x74, 0x68, 0x65, 0x6e,
	0x74, 0x69, 0x63, 0x61, 0x74, 0x65, 0x55, 0x73, 0x65, 0x72, 0x12, 0x1b, 0x0a, 0x09, 0x73, 0x68,
	0x6f, 0x77, 0x5f, 0x6d, 0x61, 0x72, 0x6b, 0x18, 0x09, 0x20, 0x01, 0x28, 0x0d, 0x52, 0x08, 0x73,
	0x68, 0x6f, 0x77, 0x4d, 0x61, 0x72, 0x6b, 0x12, 0x1f, 0x0a, 0x0b, 0x73, 0x68, 0x6f, 0x77, 0x5f,
	0x61, 0x6e, 0x73, 0x77, 0x65, 0x72, 0x18, 0x0a, 0x20, 0x01, 0x28, 0x0d, 0x52, 0x0a, 0x73, 0x68,
	0x6f, 0x77, 0x41, 0x6e, 0x73, 0x77, 0x65, 0x72, 0x12, 0x1d, 0x0a, 0x0a, 0x63, 0x72, 0x65, 0x61,
	0x74, 0x65, 0x64, 0x5f, 0x62, 0x79, 0x18, 0x0c, 0x20, 0x01, 0x28, 0x03, 0x52, 0x09, 0x63, 0x72,
	0x65, 0x61, 0x74, 0x65, 0x64, 0x42, 0x79, 0x12, 0x39, 0x0a, 0x0a, 0x63, 0x72, 0x65, 0x61, 0x74,
	0x65, 0x64, 0x5f, 0x61, 0x74, 0x18, 0x0d, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x1a, 0x2e, 0x67, 0x6f,
	0x6f, 0x67, 0x6c, 0x65, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66, 0x2e, 0x54, 0x69,
	0x6d, 0x65, 0x73, 0x74, 0x61, 0x6d, 0x70, 0x52, 0x09, 0x63, 0x72, 0x65, 0x61, 0x74, 0x65, 0x64,
	0x41, 0x74, 0x12, 0x39, 0x0a, 0x0a, 0x75, 0x70, 0x64, 0x61, 0x74, 0x65, 0x64, 0x5f, 0x61, 0x74,
	0x18, 0x0e, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x1a, 0x2e, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2e,
	0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66, 0x2e, 0x54, 0x69, 0x6d, 0x65, 0x73, 0x74, 0x61,
	0x6d, 0x70, 0x52, 0x09, 0x75, 0x70, 0x64, 0x61, 0x74, 0x65, 0x64, 0x41, 0x74, 0x22, 0x47, 0x0a,
	0x12, 0x53, 0x74, 0x61, 0x72, 0x74, 0x44, 0x6f, 0x54, 0x65, 0x73, 0x74, 0x52, 0x65, 0x71, 0x75,
	0x65, 0x73, 0x74, 0x12, 0x17, 0x0a, 0x07, 0x74, 0x65, 0x73, 0x74, 0x5f, 0x69, 0x64, 0x18, 0x01,
	0x20, 0x01, 0x28, 0x03, 0x52, 0x06, 0x74, 0x65, 0x73, 0x74, 0x49, 0x64, 0x12, 0x18, 0x0a, 0x07,
	0x76, 0x65, 0x72, 0x73, 0x69, 0x6f, 0x6e, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x07, 0x76,
	0x65, 0x72, 0x73, 0x69, 0x6f, 0x6e, 0x22, 0x2f, 0x0a, 0x13, 0x53, 0x74, 0x61, 0x72, 0x74, 0x44,
	0x6f, 0x54, 0x65, 0x73, 0x74, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x18, 0x0a,
	0x07, 0x6d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x07,
	0x6d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x22, 0x4d, 0x0a, 0x19, 0x43, 0x68, 0x65, 0x63, 0x6b,
	0x55, 0x73, 0x65, 0x72, 0x44, 0x6f, 0x69, 0x6e, 0x67, 0x54, 0x65, 0x73, 0x74, 0x52, 0x65, 0x71,
	0x75, 0x65, 0x73, 0x74, 0x12, 0x17, 0x0a, 0x07, 0x75, 0x73, 0x65, 0x72, 0x5f, 0x69, 0x64, 0x18,
	0x01, 0x20, 0x01, 0x28, 0x03, 0x52, 0x06, 0x75, 0x73, 0x65, 0x72, 0x49, 0x64, 0x12, 0x17, 0x0a,
	0x07, 0x74, 0x65, 0x73, 0x74, 0x5f, 0x69, 0x64, 0x18, 0x02, 0x20, 0x01, 0x28, 0x03, 0x52, 0x06,
	0x74, 0x65, 0x73, 0x74, 0x49, 0x64, 0x22, 0x4c, 0x0a, 0x1a, 0x43, 0x68, 0x65, 0x63, 0x6b, 0x55,
	0x73, 0x65, 0x72, 0x44, 0x6f, 0x69, 0x6e, 0x67, 0x54, 0x65, 0x73, 0x74, 0x52, 0x65, 0x73, 0x70,
	0x6f, 0x6e, 0x73, 0x65, 0x12, 0x14, 0x0a, 0x05, 0x63, 0x68, 0x65, 0x63, 0x6b, 0x18, 0x01, 0x20,
	0x01, 0x28, 0x08, 0x52, 0x05, 0x63, 0x68, 0x65, 0x63, 0x6b, 0x12, 0x18, 0x0a, 0x07, 0x6d, 0x65,
	0x73, 0x73, 0x61, 0x67, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x07, 0x6d, 0x65, 0x73,
	0x73, 0x61, 0x67, 0x65, 0x32, 0x80, 0x02, 0x0a, 0x12, 0x41, 0x6e, 0x73, 0x77, 0x65, 0x72, 0x53,
	0x68, 0x65, 0x65, 0x74, 0x53, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x12, 0x80, 0x01, 0x0a, 0x0b,
	0x53, 0x74, 0x61, 0x72, 0x74, 0x44, 0x6f, 0x54, 0x65, 0x73, 0x74, 0x12, 0x20, 0x2e, 0x61, 0x6e,
	0x73, 0x77, 0x65, 0x72, 0x5f, 0x73, 0x68, 0x65, 0x65, 0x74, 0x2e, 0x53, 0x74, 0x61, 0x72, 0x74,
	0x44, 0x6f, 0x54, 0x65, 0x73, 0x74, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x21, 0x2e,
	0x61, 0x6e, 0x73, 0x77, 0x65, 0x72, 0x5f, 0x73, 0x68, 0x65, 0x65, 0x74, 0x2e, 0x53, 0x74, 0x61,
	0x72, 0x74, 0x44, 0x6f, 0x54, 0x65, 0x73, 0x74, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65,
	0x22, 0x2c, 0x82, 0xd3, 0xe4, 0x93, 0x02, 0x26, 0x22, 0x21, 0x2f, 0x61, 0x70, 0x69, 0x2f, 0x7b,
	0x76, 0x65, 0x72, 0x73, 0x69, 0x6f, 0x6e, 0x7d, 0x2f, 0x61, 0x6e, 0x73, 0x77, 0x65, 0x72, 0x73,
	0x68, 0x65, 0x65, 0x74, 0x73, 0x2f, 0x73, 0x74, 0x61, 0x72, 0x74, 0x3a, 0x01, 0x2a, 0x12, 0x67,
	0x0a, 0x12, 0x43, 0x68, 0x65, 0x63, 0x6b, 0x55, 0x73, 0x65, 0x72, 0x44, 0x6f, 0x69, 0x6e, 0x67,
	0x54, 0x65, 0x73, 0x74, 0x12, 0x27, 0x2e, 0x61, 0x6e, 0x73, 0x77, 0x65, 0x72, 0x5f, 0x73, 0x68,
	0x65, 0x65, 0x74, 0x2e, 0x43, 0x68, 0x65, 0x63, 0x6b, 0x55, 0x73, 0x65, 0x72, 0x44, 0x6f, 0x69,
	0x6e, 0x67, 0x54, 0x65, 0x73, 0x74, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x28, 0x2e,
	0x61, 0x6e, 0x73, 0x77, 0x65, 0x72, 0x5f, 0x73, 0x68, 0x65, 0x65, 0x74, 0x2e, 0x43, 0x68, 0x65,
	0x63, 0x6b, 0x55, 0x73, 0x65, 0x72, 0x44, 0x6f, 0x69, 0x6e, 0x67, 0x54, 0x65, 0x73, 0x74, 0x52,
	0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x42, 0x11, 0x5a, 0x0f, 0x2e, 0x2f, 0x61, 0x6e, 0x73,
	0x77, 0x65, 0x72, 0x73, 0x68, 0x65, 0x65, 0x74, 0x70, 0x62, 0x62, 0x06, 0x70, 0x72, 0x6f, 0x74,
	0x6f, 0x33,
}

var (
	file_answer_sheet_proto_rawDescOnce sync.Once
	file_answer_sheet_proto_rawDescData = file_answer_sheet_proto_rawDesc
)

func file_answer_sheet_proto_rawDescGZIP() []byte {
	file_answer_sheet_proto_rawDescOnce.Do(func() {
		file_answer_sheet_proto_rawDescData = protoimpl.X.CompressGZIP(file_answer_sheet_proto_rawDescData)
	})
	return file_answer_sheet_proto_rawDescData
}

var file_answer_sheet_proto_msgTypes = make([]protoimpl.MessageInfo, 5)
var file_answer_sheet_proto_goTypes = []interface{}{
	(*Test)(nil),                       // 0: answer_sheet.Test
	(*StartDoTestRequest)(nil),         // 1: answer_sheet.StartDoTestRequest
	(*StartDoTestResponse)(nil),        // 2: answer_sheet.StartDoTestResponse
	(*CheckUserDoingTestRequest)(nil),  // 3: answer_sheet.CheckUserDoingTestRequest
	(*CheckUserDoingTestResponse)(nil), // 4: answer_sheet.CheckUserDoingTestResponse
	(*timestamppb.Timestamp)(nil),      // 5: google.protobuf.Timestamp
}
var file_answer_sheet_proto_depIdxs = []int32{
	5, // 0: answer_sheet.Test.time_start:type_name -> google.protobuf.Timestamp
	5, // 1: answer_sheet.Test.time_end:type_name -> google.protobuf.Timestamp
	5, // 2: answer_sheet.Test.created_at:type_name -> google.protobuf.Timestamp
	5, // 3: answer_sheet.Test.updated_at:type_name -> google.protobuf.Timestamp
	1, // 4: answer_sheet.AnswerSheetService.StartDoTest:input_type -> answer_sheet.StartDoTestRequest
	3, // 5: answer_sheet.AnswerSheetService.CheckUserDoingTest:input_type -> answer_sheet.CheckUserDoingTestRequest
	2, // 6: answer_sheet.AnswerSheetService.StartDoTest:output_type -> answer_sheet.StartDoTestResponse
	4, // 7: answer_sheet.AnswerSheetService.CheckUserDoingTest:output_type -> answer_sheet.CheckUserDoingTestResponse
	6, // [6:8] is the sub-list for method output_type
	4, // [4:6] is the sub-list for method input_type
	4, // [4:4] is the sub-list for extension type_name
	4, // [4:4] is the sub-list for extension extendee
	0, // [0:4] is the sub-list for field type_name
}

func init() { file_answer_sheet_proto_init() }
func file_answer_sheet_proto_init() {
	if File_answer_sheet_proto != nil {
		return
	}
	if !protoimpl.UnsafeEnabled {
		file_answer_sheet_proto_msgTypes[0].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*Test); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_answer_sheet_proto_msgTypes[1].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*StartDoTestRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_answer_sheet_proto_msgTypes[2].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*StartDoTestResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_answer_sheet_proto_msgTypes[3].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*CheckUserDoingTestRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_answer_sheet_proto_msgTypes[4].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*CheckUserDoingTestResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
	}
	type x struct{}
	out := protoimpl.TypeBuilder{
		File: protoimpl.DescBuilder{
			GoPackagePath: reflect.TypeOf(x{}).PkgPath(),
			RawDescriptor: file_answer_sheet_proto_rawDesc,
			NumEnums:      0,
			NumMessages:   5,
			NumExtensions: 0,
			NumServices:   1,
		},
		GoTypes:           file_answer_sheet_proto_goTypes,
		DependencyIndexes: file_answer_sheet_proto_depIdxs,
		MessageInfos:      file_answer_sheet_proto_msgTypes,
	}.Build()
	File_answer_sheet_proto = out.File
	file_answer_sheet_proto_rawDesc = nil
	file_answer_sheet_proto_goTypes = nil
	file_answer_sheet_proto_depIdxs = nil
}
